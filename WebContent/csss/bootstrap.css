/*!
 * Bootstrap v4.4.1 (https://getbootstrap.com/)
 * Copyright 2011-2019 The Bootstrap Authors
 * Copyright 2011-2019 Twitter, Inc.
 * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)
 */
:root {
  --blue: #007bff;
  --indigo: #6610f2;
  --purple: #6f42c1;
  --pink: #e83e8c;
  --red: #dc3545;
  --orange: #fd7e14;
  --yellow: #ffc107;
  --green: #28a745;
  --teal: #20c997;
  --cyan: #17a2b8;
  --white: #fff;
  --gray: #6c757d;
  --gray-dark: #343a40;
  --primary: #007bff;
  --secondary: #6c757d;
  --success: #28a745;
  --info: #17a2b8;
  --warning: #ffc107;
  --danger: #dc3545;
  --light: #f8f9fa;
  --dark: #343a40;
  --breakpoint-xs: 0;
  --breakpoint-sm: 576px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1200px;
  --font-family-sans-serif: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  --font-family-monospace: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block;
}

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, "Noto Sans", sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff;
}

[tabindex="-1"]:focus:not(:focus-visible) {
  outline: 0 !important;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem;
}

p {
  margin-top: 0;
  margin-bottom: 1rem;
}

abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0;
  -webkit-text-decoration-skip-ink: none;
  text-decoration-skip-ink: none;
}

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit;
}

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem;
}

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0;
}

dt {
  font-weight: 700;
}

dd {
  margin-bottom: .5rem;
  margin-left: 0;
}

blockquote {
  margin: 0 0 1rem;
}

b,
strong {
  font-weight: bolder;
}

small {
  font-size: 80%;
}

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline;
}

sub {
  bottom: -.25em;
}

sup {
  top: -.5em;
}

a {
  color: #007bff;
  text-decoration: none;
  background-color: transparent;
}

a:hover {
  color: #0056b3;
  text-decoration: underline;
}

a:not([href]) {
  color: inherit;
  text-decoration: none;
}

a:not([href]):hover {
  color: inherit;
  text-decoration: none;
}

pre,
code,
kbd,
samp {
  font-family: SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  font-size: 1em;
}

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
}

figure {
  margin: 0 0 1rem;
}

img {
  vertical-align: middle;
  border-style: none;
}

svg {
  overflow: hidden;
  vertical-align: middle;
}

table {
  border-collapse: collapse;
}

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #6c757d;
  text-align: left;
  caption-side: bottom;
}

th {
  text-align: inherit;
}

label {
  display: inline-block;
  margin-bottom: 0.5rem;
}

button {
  border-radius: 0;
}

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color;
}

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

select {
  word-wrap: normal;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button:not(:disabled),
[type="button"]:not(:disabled),
[type="reset"]:not(:disabled),
[type="submit"]:not(:disabled) {
  cursor: pointer;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: listbox;
}

textarea {
  overflow: auto;
  resize: vertical;
}

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
}

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal;
}

progress {
  vertical-align: baseline;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: none;
}

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button;
}

output {
  display: inline-block;
}

summary {
  display: list-item;
  cursor: pointer;
}

template {
  display: none;
}

[hidden] {
  display: none !important;
}

h1, h2, h3, h4, h5, h6,
.h1, .h2, .h3, .h4, .h5, .h6 {
  margin-bottom: 0.5rem;
  font-weight: 500;
  line-height: 1.2;
}

h1, .h1 {
  font-size: 2.5rem;
}

h2, .h2 {
  font-size: 2rem;
}

h3, .h3 {
  font-size: 1.75rem;
}

h4, .h4 {
  font-size: 1.5rem;
}

h5, .h5 {
  font-size: 1.25rem;
}

h6, .h6 {
  font-size: 1rem;
}

.lead {
  font-size: 1.25rem;
  font-weight: 300;
}

.display-1 {
  font-size: 6rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-2 {
  font-size: 5.5rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-3 {
  font-size: 4.5rem;
  font-weight: 300;
  line-height: 1.2;
}

.display-4 {
  font-size: 3.5rem;
  font-weight: 300;
  line-height: 1.2;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  border: 0;
  border-top: 1px solid rgba(0, 0, 0, 0.1);
}

small,
.small {
  font-size: 80%;
  font-weight: 400;
}

mark,
.mark {
  padding: 0.2em;
  background-color: #fcf8e3;
}

.list-unstyled {
  padding-left: 0;
  list-style: none;
}

.list-inline {
  padding-left: 0;
  list-style: none;
}

.list-inline-item {
  display: inline-block;
}

.list-inline-item:not(:last-child) {
  margin-right: 0.5rem;
}

.initialism {
  font-size: 90%;
  text-transform: uppercase;
}

.blockquote {
  margin-bottom: 1rem;
  font-size: 1.25rem;
}

.blockquote-footer {
  display: block;
  font-size: 80%;
  color: #6c757d;
}

.blockquote-footer::before {
  content: "\2014\00A0";
}

.img-fluid {
  max-width: 100%;
  height: auto;
}

.img-thumbnail {
  padding: 0.25rem;
  background-color: #fff;
  border: 1px solid #dee2e6;
  border-radius: 0.25rem;
  max-width: 100%;
  height: auto;
}

.figure {
  display: inline-block;
}

.figure-img {
  margin-bottom: 0.5rem;
  line-height: 1;
}

.figure-caption {
  font-size: 90%;
  color: #6c757d;
}

code {
  font-size: 87.5%;
  color: #e83e8c;
  word-wrap: break-word;
}

a > code {
  color: inherit;
}

kbd {
  padding: 0.2rem 0.4rem;
  font-size: 87.5%;
  color: #fff;
  background-color: #212529;
  border-radius: 0.2rem;
}

kbd kbd {
  padding: 0;
  font-size: 100%;
  font-weight: 700;
}

pre {
  display: block;
  font-size: 87.5%;
  color: #212529;
}

pre code {
  font-size: inherit;
  color: inherit;
  word-break: normal;
}

.pre-scrollable {
  max-height: 340px;
  overflow-y: scroll;
}

.container {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container {
    max-width: 960px;
  }
}

@media (min-width: 1200px) {
  .container {
    max-width: 1140px;
  }
}

.container-fluid, .container-sm, .container-md, .container-lg, .container-xl {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

@media (min-width: 576px) {
  .container, .container-sm {
    max-width: 540px;
  }
}

@media (min-width: 768px) {
  .container, .container-sm, .container-md {
    max-width: 720px;
  }
}

@media (min-width: 992px) {
  .container, .container-sm, .container-md, .container-lg {
    max-width: 960px;
  }
}

@media (min-width: 1200px) {
  .container, .container-sm, .container-md, .container-lg, .container-xl {
    max-width: 1140px;
  }
}

.row {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  margin-right: -15px;
  margin-left: -15px;
}

.no-gutters {
  margin-right: 0;
  margin-left: 0;
}

.no-gutters > .col,
.no-gutters > [class*="col-"] {
  padding-right: 0;
  padding-left: 0;
}

.col-1, .col-2, .col-3, .col-4, .col-5, .col-6, .col-7, .col-8, .col-9, .col-10, .col-11, .col-12, .col,
.col-auto, .col-sm-1, .col-sm-2, .col-sm-3, .col-sm-4, .col-sm-5, .col-sm-6, .col-sm-7, .col-sm-8, .col-sm-9, .col-sm-10, .col-sm-11, .col-sm-12, .col-sm,
.col-sm-auto, .col-md-1, .col-md-2, .col-md-3, .col-md-4, .col-md-5, .col-md-6, .col-md-7, .col-md-8, .col-md-9, .col-md-10, .col-md-11, .col-md-12, .col-md,
.col-md-auto, .col-lg-1, .col-lg-2, .col-lg-3, .col-lg-4, .col-lg-5, .col-lg-6, .col-lg-7, .col-lg-8, .col-lg-9, .col-lg-10, .col-lg-11, .col-lg-12, .col-lg,
.col-lg-auto, .col-xl-1, .col-xl-2, .col-xl-3, .col-xl-4, .col-xl-5, .col-xl-6, .col-xl-7, .col-xl-8, .col-xl-9, .col-xl-10, .col-xl-11, .col-xl-12, .col-xl,
.col-xl-auto {
  position: relative;
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
}

.col {
  -ms-flex-preferred-size: 0;
  flex-basis: 0;
  -ms-flex-positive: 1;
  flex-grow: 1;
  max-width: 100%;
}

.row-cols-1 > * {
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
  max-width: 100%;
}

.row-cols-2 > * {
  -ms-flex: 0 0 50%;
  flex: 0 0 50%;
  max-width: 50%;
}

.row-cols-3 > * {
  -ms-flex: 0 0 33.333333%;
  flex: 0 0 33.333333%;
  max-width: 33.333333%;
}

.row-cols-4 > * {
  -ms-flex: 0 0 25%;
  flex: 0 0 25%;
  max-width: 25%;
}

.row-cols-5 > * {
  -ms-flex: 0 0 20%;
  flex: 0 0 20%;
  max-width: 20%;
}

.row-cols-6 > * {
  -ms-flex: 0 0 16.666667%;
  flex: 0 0 16.666667%;
  max-width: 16.666667%;
}

.col-auto {
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  width: auto;
  max-width: 100%;
}

.col-1 {
  -ms-flex: 0 0 8.333333%;
  flex: 0 0 8.333333%;
  max-width: 8.333333%;
}

.col-2 {
  -ms-flex: 0 0 16.666667%;
  flex: 0 0 16.666667%;
  max-width: 16.666667%;
}

.col-3 {
  -ms-flex: 0 0 25%;
  flex: 0 0 25%;
  max-width: 25%;
}

.col-4 {
  -ms-flex: 0 0 33.333333%;
  flex: 0 0 33.333333%;
  max-width: 33.333333%;
}

.col-5 {
  -ms-flex: 0 0 41.666667%;
  flex: 0 0 41.666667%;
  max-width: 41.666667%;
}

.col-6 {
  -ms-flex: 0 0 50%;
  flex: 0 0 50%;
  max-width: 50%;
}

.col-7 {
  -ms-flex: 0 0 58.333333%;
  flex: 0 0 58.333333%;
  max-width: 58.333333%;
}

.col-8 {
  -ms-flex: 0 0 66.666667%;
  flex: 0 0 66.666667%;
  max-width: 66.666667%;
}

.col-9 {
  -ms-flex: 0 0 75%;
  flex: 0 0 75%;
  max-width: 75%;
}

.col-10 {
  -ms-flex: 0 0 83.333333%;
  flex: 0 0 83.333333%;
  max-width: 83.333333%;
}

.col-11 {
  -ms-flex: 0 0 91.666667%;
  flex: 0 0 91.666667%;
  max-width: 91.666667%;
}

.col-12 {
  -ms-flex: 0 0 100%;
  flex: 0 0 100%;
  max-width: 100%;
}

.order-first {
  -ms-flex-order: -1;
  order: -1;
}

.order-last {
  -ms-flex-order: 13;
  order: 13;
}

.order-0 {
  -ms-flex-order: 0;
  order: 0;
}

.order-1 {
  -ms-flex-order: 1;
  order: 1;
}

.order-2 {
  -ms-flex-order: 2;
  order: 2;
}

.order-3 {
  -ms-flex-order: 3;
  order: 3;
}

.order-4 {
  -ms-flex-order: 4;
  order: 4;
}

.order-5 {
  -ms-flex-order: 5;
  order: 5;
}

.order-6 {
  -ms-flex-order: 6;
  order: 6;
}

.order-7 {
  -ms-flex-order: 7;
  order: 7;
}

.order-8 {
  -ms-flex-order: 8;
  order: 8;
}

.order-9 {
  -ms-flex-order: 9;
  order: 9;
}

.order-10 {
  -ms-flex-order: 10;
  order: 10;
}

.order-11 {
  -ms-flex-order: 11;
  order: 11;
}

.order-12 {
  -ms-flex-order: 12;
  order: 12;
}

.offset-1 {
  margin-left: 8.333333%;
}

.offset-2 {
  margin-left: 16.666667%;
}

.offset-3 {
  margin-left: 25%;
}

.offset-4 {
  margin-left: 33.333333%;
}

.offset-5 {
  margin-left: 41.666667%;
}

.offset-6 {
  margin-left: 50%;
}

.offset-7 {
  margin-left: 58.333333%;
}

.offset-8 {
  margin-left: 66.666667%;
}

.offset-9 {
  margin-left: 75%;
}

.offset-10 {
  margin-left: 83.333333%;
}

.offset-11 {
  margin-left: 91.666667%;
}

@media (min-width: 576px) {
  .col-sm {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }
  .row-cols-sm-1 > * {
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .row-cols-sm-2 > * {
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .row-cols-sm-3 > * {
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .row-cols-sm-4 > * {
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .row-cols-sm-5 > * {
    -ms-flex: 0 0 20%;
    flex: 0 0 20%;
    max-width: 20%;
  }
  .row-cols-sm-6 > * {
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-sm-auto {
    -ms-flex: 0 0 auto;
    flex: 0 0 auto;
    width: auto;
    max-width: 100%;
  }
  .col-sm-1 {
    -ms-flex: 0 0 8.333333%;
    flex: 0 0 8.333333%;
    max-width: 8.333333%;
  }
  .col-sm-2 {
    -ms-flex: 0 0 16.666667%;
    flex: 0 0 16.666667%;
    max-width: 16.666667%;
  }
  .col-sm-3 {
    -ms-flex: 0 0 25%;
    flex: 0 0 25%;
    max-width: 25%;
  }
  .col-sm-4 {
    -ms-flex: 0 0 33.333333%;
    flex: 0 0 33.333333%;
    max-width: 33.333333%;
  }
  .col-sm-5 {
    -ms-flex: 0 0 41.666667%;
    flex: 0 0 41.666667%;
    max-width: 41.666667%;
  }
  .col-sm-6 {
    -ms-flex: 0 0 50%;
    flex: 0 0 50%;
    max-width: 50%;
  }
  .col-sm-7 {
    -ms-flex: 0 0 58.333333%;
    flex: 0 0 58.333333%;
    max-width: 58.333333%;
  }
  .col-sm-8 {
    -ms-flex: 0 0 66.666667%;
    flex: 0 0 66.666667%;
    max-width: 66.666667%;
  }
  .col-sm-9 {
    -ms-flex: 0 0 75%;
    flex: 0 0 75%;
    max-width: 75%;
  }
  .col-sm-10 {
    -ms-flex: 0 0 83.333333%;
    flex: 0 0 83.333333%;
    max-width: 83.333333%;
  }
  .col-sm-11 {
    -ms-flex: 0 0 91.666667%;
    flex: 0 0 91.666667%;
    max-width: 91.666667%;
  }
  .col-sm-12 {
    -ms-flex: 0 0 100%;
    flex: 0 0 100%;
    max-width: 100%;
  }
  .order-sm-first {
    -ms-flex-order: -1;
    order: -1;
  }
  .order-sm-last {
    -ms-flex-order: 13;
    order: 13;
  }
  .order-sm-0 {
    -ms-flex-order: 0;
    order: 0;
  }
  .order-sm-1 {
    -ms-flex-order: 1;
    order: 1;
  }
  .order-sm-2 {
    -ms-flex-order: 2;
    order: 2;
  }
  .order-sm-3 {
    -ms-flex-order: 3;
    order: 3;
  }
  .order-sm-4 {
    -ms-flex-order: 4;
    order: 4;
  }
  .order-sm-5 {
    -ms-flex-order: 5;
    order: 5;
  }
  .order-sm-6 {
    -ms-flex-order: 6;
    order: 6;
  }
  .order-sm-7 {
    -ms-flex-order: 7;
    order: 7;
  }
  .order-sm-8 {
    -ms-flex-order: 8;
    order: 8;
  }
  .order-sm-9 {
    -ms-flex-order: 9;
    order: 9;
  }
  .order-sm-10 {
    -ms-flex-order: 10;
    order: 10;
  }
  .order-sm-11 {
    -ms-flex-order: 11;
    order: 11;
  }
  .order-sm-12 {
    -ms-flex-order: 12;
    order: 12;
  }
  .offset-sm-0 {
    margin-left: 0;
  }
  .offset-sm-1 {
    margin-left: 8.333333%;
  }
  .offset-sm-2 {
    margin-left: 16.666667%;
  }
  .offset-sm-3 {
    margin-left: 25%;
  }
  .offset-sm-4 {
    margin-left: 33.333333%;
  }
  .offset-sm-5 {
    margin-left: 41.666667%;
  }
  .offset-sm-6 {
    margin-left: 50%;
  }
  .offset-sm-7 {
    margin-left: 58.333333%;
  }
  .offset-sm-8 {
    margin-left: 66.666667%;
  }
  .offset-sm-9 {
    margin-left: 75%;
  }
  .offset-sm-10 {
    margin-left: 83.333333%;
  }
  .offset-sm-11 {
    margin-left: 91.666667%;
  }
}

@media (min-width: 768px) {
  .col-md {
    -ms-flex-preferred-size: 0;
    flex-basis: 0;
    -ms-flex-positive: 1;
    flex-grow: 1;
    max-width: 100%;
  }      <![CDATA[Makes button read only.]]>
            </description>
            <name>readonly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the button.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the button.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button loses focus.]]>
            </description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button loses focus and its value has been modified since gaining focus.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button is clicked.]]>
            </description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button is double clicked.]]>
            </description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button receives focus.]]>
            </description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed down over button.]]>
            </description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed and released over button.]]>
            </description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is released over button.]]>
            </description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is pressed down over button.]]>
            </description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved within button.]]>
            </description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved away from button.]]>
            </description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved onto button.]]>
            </description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is released over button.]]>
            </description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Icon of the button.]]>
            </description>
            <name>icon</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the icon, default value is left.]]>
            </description>
            <name>iconPos</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Resource to link to.]]>
            </description>
            <name>href</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The window target. Default _self.]]>
            </description>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if label of the component is escaped or not.]]>
            </description>
            <name>escape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Displays button inline instead of fitting the content width, only used by mobile.]]>
            </description>
            <name>inline</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disable appending the
             on the rendering of this element.]]>
            </description>
            <name>disableClientWindow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Cache component is used to reduce page load time by caching the content after initial rendering.]]>
        </description>
        <tag-name>cache</tag-name>
        <component>
            <component-type>org.primefaces.component.Cache</component-type>
            <renderer-type>org.primefaces.component.UICacheRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables caching.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Unique id of the cache region, defaults to view id.]]>
            </description>
            <name>region</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Unique id of the cache entry in region, defaults to client id of component.]]>
            </description>
            <name>key</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, lifecycle events such as button actions are executed. Default is false.]]>
            </description>
            <name>processEvents</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Calendar is an input component used to provide a date. Other than basic features calendar supports paging, localization, ajax selection and more.]]>
        </description>
        <tag-name>calendar</tag-name>
        <component>
            <component-type>org.primefaces.component.Calendar</component-type>
            <renderer-type>org.primefaces.component.CalendarRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance.
    In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]>
            </description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key to transfer focus to the input element.]]>
            </description>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Alternate textual description of the input element.]]>
            </description>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Controls browser autocomplete behavior.]]>
            </description>
            <name>autocomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Direction indication for text that does not inherit directionality.]]>
            </description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables the input element, default is false.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Code describing the language used in the generated markup.]]>
            </description>
            <name>lang</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of characters that may be entered in this field.]]>
            </description>
            <name>maxlength</name>
            <required>false</required>
            <type>int</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element loses focus.]]>
            </description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element loses focus and its value has been modified since gaining focus.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element is clicked.]]>
            </description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element is double clicked.]]>
            </description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element receives focus.]]>
            </description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed down over input element.]]>
            </description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed and released over input element.]]>
            </description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is released over input element.]]>
            </description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is pressed down over input element.]]>
            </description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved within input element.]]>
            </description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved away from input element.]]>
            </description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved onto input element.]]>
            </description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is released over input element.]]>
            </description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when text within input element is selected by user.]]>
            </description>
            <name>onselect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that this input element will prevent changes by the user.]]>
            </description>
            <name>readonly</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of characters used to determine the width of the input element.]]>
            </description>
            <name>size</name>
            <required>false</required>
            <type>int</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the component.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the component.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the element in the tabbing order.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Advisory tooltip information.]]>
            </description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The placeholder attribute specifies a short hint that describes the expected value of an input field.]]>
            </description>
            <name>placeholder</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets calendar's minimum visible date.]]>
            </description>
            <name>mindate</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets calendar's maximum visible date.]]>
            </description>
            <name>maxdate</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables multiple page rendering.]]>
            </description>
            <name>pages</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines how the calendar will be displayed. Default is popup]]>
            </description>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[DateFormat pattern for localization.]]>
            </description>
            <name>pattern</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[User locale for i18n localization messages. The attribute can be either a String or java.util.Locale object.]]>
            </description>
            <name>locale</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables month/year navigator. Default is false.]]>
            </description>
            <name>navigator</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[String or a java.util.TimeZone instance to specify the timezone used for date conversion, defaults to TimeZone.getDefault()]]>
            </description>
            <name>timeZone</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Makes input text of a popup calendar readonly. Default is false.]]>
            </description>
            <name>readonlyInput</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Visibility of button panel containing today and done buttons. Default is false.]]>
            </description>
            <name>showButtonPanel</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Effect to use when displaying and showing the popup calendar.]]>
            </description>
            <name>effect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Duration of the effect. Default is normal.]]>
            </description>
            <name>effectDuration</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side event that displays the popup calendar.]]>
            </description>
            <name>showOn</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Displays the week number next to each week. Default is false.]]>
            </description>
            <name>showWeek</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables weekend columns. Default is false.]]>
            </description>
            <name>disabledWeekends</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Displays days belonging to other months. Default is false.]]>
            </description>
            <name>showOtherMonths</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables selection of days belonging to other months. Default is false.]]>
            </description>
            <name>selectOtherMonths</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Year range for the navigator, default is "c-10:c+10"]]>
            </description>
            <name>yearRange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shows only time picker without date.]]>
            </description>
            <name>timeOnly</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Hour steps, default is 1.]]>
            </description>
            <name>stepHour</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Minute steps, default is 1.]]>
            </description>
            <name>stepMinute</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Second steps, default is 1.]]>
            </description>
            <name>stepSecond</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Minimum boundary for hour selection. Default is 0.]]>
            </description>
            <name>minHour</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum boundary for hour selection. Default is 23.]]>
            </description>
            <name>maxHour</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Minimum boundary for minute selection. Default is 0.]]>
            </description>
            <name>minMinute</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum boundary for minute selection. Default is 59.]]>
            </description>
            <name>maxMinute</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Minimum boundary for second selection. Default is 0.]]>
            </description>
            <name>minSecond</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum boundary for second selection. Default is 59.]]>
            </description>
            <name>maxSecond</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets the initial date when value is not populated.]]>
            </description>
            <name>pagedate</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Callback to execute before displaying a date, used to customize date display.]]>
            </description>
            <name>beforeShowDay</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if a mask should be applied to the input field. Default value is "false" and valid values to enable are "true" that uses the pattern as the mask or a custom template. Refer to
                inputMask component for more information about custom templates.]]>
            </description>
            <name>mask</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the type of element to use for time picker, valid values are "slider" , "select" and "custom"(with "timeControlObject" attribute).]]>
            </description>
            <name>timeControlType</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Callback to execute before displaying calendar, element and calendar instance are passed as parameters.]]>
            </description>
            <name>beforeShow</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[PlaceHolder in mask template.]]>
            </description>
            <name>maskSlotChar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Clears the field on blur when incomplete input is entered.]]>
            </description>
            <name>maskAutoClear</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side object to use in custom timeControlType.]]>
            </description>
            <name>timeControlObject</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Allows direct input in time field. Default is false.]]>
            </description>
            <name>timeInput</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to show the hour control, valid values are "true" and "false".]]>
            </description>
            <name>showHour</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to show the minute control, valid values are "true" and "false".]]>
            </description>
            <name>showMinute</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to show the second control, valid values are "true" and "false".]]>
            </description>
            <name>showSecond</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to show the millisecond control, valid values are "true" and "false".]]>
            </description>
            <name>showMillisec</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to show the "Current Date" button if showButtonPanel is rendered. Default is "true".]]>
            </description>
            <name>showTodayButton</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the button in the tabbing order.]]>
            </description>
            <name>buttonTabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the input element. Used when mode is popup.]]>
            </description>
            <name>inputStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the input element. Used when mode is popup.]]>
            </description>
            <name>inputStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Input field type. Default is text.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If enabled, the input is focused again after selecting a date. Default is false.]]>
            </description>
            <name>focusOnSelect</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Try to show the time dropdowns all on one line. This should be used with controlType 'select'.]]>
            </description>
            <name>oneLine</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Default for hour selection, if no date is given. Default is 0.]]>
            </description>
            <name>defaultHour</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Default for minute selection, if no date is given. Default is 0.]]>
            </description>
            <name>defaultMinute</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Default for second selection, if no date is given. Default is 0.]]>
            </description>
            <name>defaultSecond</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Default for millisecond selection, if no date is given. Default is 0.]]>
            </description>
            <name>defaultMillisec</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Captcha is a form validation component based on Recaptcha API.]]>
        </description>
        <tag-name>captcha</tag-name>
        <component>
            <component-type>org.primefaces.component.Captcha</component-type>
            <renderer-type>org.primefaces.component.CaptchaRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance.
    In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]>
            </description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Theme of the captcha. Default is light.]]>
            </description>
            <name>theme</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Key of the supported languages. Default is "en".]]>
            </description>
            <name>language</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the input element in the tabbing order.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Callback executed when the user submits a successful captcha response.]]>
            </description>
            <name>callback</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Callback executed when the captcha response expires and the user needs to solve a new captcha.]]>
            </description>
            <name>expired</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The size of the widget.]]>
            </description>
            <name>size</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Carousel is a multi purpose component to display a set of data or general content with slide effects.]]>
        </description>
        <tag-name>carousel</tag-name>
        <component>
            <component-type>org.primefaces.component.Carousel</component-type>
            <renderer-type>org.primefaces.component.CarouselRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Datasource of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the iterator variable used to refer each data.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Index of the first visible item.]]>
            </description>
            <name>firstVisible</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of visible items per page. Default is 3.]]>
            </description>
            <name>numVisible</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets continuous scrolling. Default is false.]]>
            </description>
            <name>circular</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets vertical scrolling. Default is false]]>
            </description>
            <name>vertical</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets the time in milliseconds to have Carousel start scrolling automatically after being initialized. Default is 0.]]>
            </description>
            <name>autoPlayInterval</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines number of pageLinks of paginator.]]>
            </description>
            <name>pageLinks</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the animation effect slide or fade. Default is slide.]]>
            </description>
            <name>effect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the animation effect. Default is easeInOutCirc.]]>
            </description>
            <name>easing</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets the speed of the scrolling animation in milliseconds. Default is 500.]]>
            </description>
            <name>effectDuration</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Text format of the pager dropdown elements. Default is "{page}".]]>
            </description>
            <name>dropdownTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the main container.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the main container.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of each item container.]]>
            </description>
            <name>itemStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of each item container.]]>
            </description>
            <name>itemStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for header facet.]]>
            </description>
            <name>headerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for footer facet.]]>
            </description>
            <name>footerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[In responsive mode, carousel adjusts its content based on screen size.]]>
            </description>
            <name>responsive</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Breakpoint value in pixels to switch between small and large viewport. Default is 640]]>
            </description>
            <name>breakpoint</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Makes panel toggleable. Default is false.]]>
            </description>
            <name>toggleable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Speed of toggling in milliseconds. Default is 500]]>
            </description>
            <name>toggleSpeed</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Renders a toggleable panel as collapsed. Default is false.]]>
            </description>
            <name>collapsed</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, carousel state is saved in a cookie for the session. Default is false.]]>
            </description>
            <name>stateful</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[CellEditor is a helper component of datatable used for incell editing.]]>
        </description>
        <tag-name>cellEditor</tag-name>
        <component>
            <component-type>org.primefaces.component.CellEditor</component-type>
            <renderer-type>org.primefaces.component.CellEditorRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Prevents hidden content to be shown.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[]]>
        </description>
        <tag-name>chart</tag-name>
        <component>
            <component-type>org.primefaces.component.Chart</component-type>
            <renderer-type>org.primefaces.component.ChartRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of the chart.]]>
            </description>
            <name>type</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Model of the chart.]]>
            </description>
            <name>model</name>
            <required>false</required>
            <type>org.primefaces.model.chart.ChartModel</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the component.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the component.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[In responsive mode, chart is redrawn when window is resized.]]>
            </description>
            <name>responsive</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[]]>
        </description>
        <tag-name>checkbox</tag-name>
        <component>
            <component-type>org.primefaces.component.Checkbox</component-type>
            <renderer-type>org.primefaces.component.CheckboxRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables the component.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Index of the selectItem of the SelectManyCheckbox.]]>
            </description>
            <name>itemIndex</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute on state change.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Id of the SelectManyCheckbox component to attach to.]]>
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the component.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the component.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The tabindex attribute specifies the tab order of an element when the "tab" button is used for navigating.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Chips is used to enter multiple values on an inputfield.]]>
        </description>
        <tag-name>chips</tag-name>
        <component>
            <component-type>org.primefaces.component.Chips</component-type>
            <renderer-type>org.primefaces.component.ChipsRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance.
    In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]>
            </description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key to transfer focus to the input element.]]>
            </description>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Alternate textual description of the input element.]]>
            </description>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Controls browser autocomplete behavior.]]>
            </description>
            <name>autocomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Direction indication for text that does not inherit directionality.]]>
            </description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables the input element, default is false.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Code describing the language used in the generated markup.]]>
            </description>
            <name>lang</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of characters that may be entered in this field.]]>
            </description>
            <name>maxlength</name>
            <required>false</required>
            <type>int</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element loses focus.]]>
            </description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element loses focus and its value has been modified since gaining focus.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element is clicked.]]>
            </description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element is double clicked.]]>
            </description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when input element receives focus.]]>
            </description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed down over input element.]]>
            </description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed and released over input element.]]>
            </description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is released over input element.]]>
            </description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is pressed down over input element.]]>
            </description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved within input element.]]>
            </description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved away from input element.]]>
            </description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is moved onto input element.]]>
            </description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer input element is released over input element.]]>
            </description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when text within input element is selected by user.]]>
            </description>
            <name>onselect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Flag indicating that this input element will prevent changes by the user.]]>
            </description>
            <name>readonly</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of characters used to determine the width of the input element.]]>
            </description>
            <name>size</name>
            <required>false</required>
            <type>int</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the component.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the component.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the element in the tabbing order.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Advisory tooltip information.]]>
            </description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The placeholder attribute specifies a short hint that describes the expected value of an input field.]]>
            </description>
            <name>placeholder</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of entries allowed.]]>
            </description>
            <name>max</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the input control.]]>
            </description>
            <name>inputStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the input control.]]>
            </description>
            <name>inputStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Clock displays server or client datetime live.]]>
        </description>
        <tag-name>clock</tag-name>
        <component>
            <component-type>org.primefaces.component.Clock</component-type>
            <renderer-type>org.primefaces.component.ClockRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Datetime format.]]>
            </description>
            <name>pattern</name>
            <required>false</required>
            <type>String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Mode of the client, valid values are client and server.]]>
            </description>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Syncs time periodically in server mode.]]>
            </description>
            <name>autoSync</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the sync interval in autoSync mode, default is 60000 milliseconds.]]>
            </description>
            <name>syncInterval</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[String or a java.util.TimeZone instance to specify the timezone used for date conversion, defaults to TimeZone.getDefault()]]>
            </description>
            <name>timeZone</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Display mode, valid values are digital(default) and analog.]]>
            </description>
            <name>displayMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[]]>
        </description>
        <tag-name>colorPicker</tag-name>
        <component>
            <component-type>org.primefaces.component.ColorPicker</component-type>
            <renderer-type>org.primefaces.component.ColorPickerRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression or a literal text that defines a converter for the component. When it's an EL expression, it's resolved to a converter instance.
    In case it's a static text, it must refer to a converter id.]]>
            </description>
            <name>converter</name>
            <required>false</required>
            <type>java.faces.convert.Converter</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set true, process validations logic is executed at apply request values phase for this component. Default is false.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Marks component as required.]]>
            </description>
            <name>required</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression referring to a method validationg the input.]]>
            </description>
            <name>validator</name>
            <required>false</required>
            <type>javax.faces.validator.Validator</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method binding expression referring to a method for handling a valuchangeevent.]]>
            </description>
            <name>valueChangeListener</name>
            <required>false</required>
            <type>javax.faces.event.ValueChangeListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when required field validation fails.]]>
            </description>
            <name>requiredMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when conversion fails.]]>
            </description>
            <name>converterMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message to display when validation fails.]]>
            </description>
            <name>validatorMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[]]>
            </description>
            <name>mode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute on value change.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Column is an extended version of the standard column used by various PrimeFaces components like datatable, treetable and more.]]>
        </description>
        <tag-name>column</tag-name>
        <component>
            <component-type>org.primefaces.component.Column</component-type>
            <renderer-type>org.primefaces.component.ColumnRenderer</renderer-type>
            <handler-class>org.primefaces.component.column.ColumnHandler</handler-class>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Property to be used for sorting.]]>
            </description>
            <name>sortBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the column.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the column.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom pluggable sortFunction.]]>
            </description>
            <name>sortFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Property to be used for filtering.]]>
            </description>
            <name>filterBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the filter element.]]>
            </description>
            <name>filterStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the filter element.]]>
            </description>
            <name>filterStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A collection of selectitems for filter dropdown.]]>
            </description>
            <name>filterOptions</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Match mode for filtering.]]>
            </description>
            <name>filterMatchMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Location of the column filter with respect to header content. Options are 'bottom'(default) and 'top'.]]>
            </description>
            <name>filterPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the number of rows the column spans.]]>
            </description>
            <name>rowspan</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the number of columns the column spans.]]>
            </description>
            <name>colspan</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for header facet.]]>
            </description>
            <name>headerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for footer facet.]]>
            </description>
            <name>footerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables selection mode, valid values are "single" and "multiple".]]>
            </description>
            <name>selectionMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of characters for an input filter.]]>
            </description>
            <name>filterMaxLength</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies resizable feature at column level. Datatable's resizableColumns must be enabled to use this option.]]>
            </description>
            <name>resizable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the column should be exported by dataexporter.]]>
            </description>
            <name>exportable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the filter field.]]>
            </description>
            <name>filterValue</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Width of the column in pixels or percentage.]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if panel is toggleable by columnToggler component. Default value is true and a false value marks the column as static.]]>
            </description>
            <name>toggleable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom implementation to filter a value against a constraint.]]>
            </description>
            <name>filterFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the field to pass lazy load method for filtering and sorting. If not specified, filterBy-sortBy values are used to identify the field name.]]>
            </description>
            <name>field</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Priority of the column defined as an integer, lower values have more priority.]]>
            </description>
            <name>priority</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to mark column as sortable.]]>
            </description>
            <name>sortable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to mark column as filterable.]]>
            </description>
            <name>filterable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Controls the visibilty of the column, default is true.]]>
            </description>
            <name>visible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether clicking the column selects the row when datatable has row selection enabled, default is true.]]>
            </description>
            <name>selectRow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label to read by screen readers, when not specified headerText is used.]]>
            </description>
            <name>ariaHeaderText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom pluggable exportFunction.]]>
            </description>
            <name>exportFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Speficies whether to group rows based on the column data.]]>
            </description>
            <name>groupRow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the header value of column to be exported.]]>
            </description>
            <name>exportHeaderValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the footer value of column to be exported.]]>
            </description>
            <name>exportFooterValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[ColumnGroup is used by datatable for grouping.]]>
        </description>
        <tag-name>columnGroup</tag-name>
        <component>
            <component-type>org.primefaces.component.ColumnGroup</component-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of group, valid values are header and footer.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[]]>
        </description>
        <tag-name>columns</tag-name>
        <component>
            <component-type>org.primefaces.component.Columns</component-type>
            <handler-class>org.primefaces.component.columns.ColumnsHandler</handler-class>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[]]>
            </description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Property to be used for sorting.]]>
            </description>
            <name>sortBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the column.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the column.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom pluggable sortFunction.]]>
            </description>
            <name>sortFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Property to be used for filtering.]]>
            </description>
            <name>filterBy</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the filter element.]]>
            </description>
            <name>filterStyle</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the filter element.]]>
            </description>
            <name>filterStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A collection of selectitems for filter dropdown.]]>
            </description>
            <name>filterOptions</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Match mode for filtering.]]>
            </description>
            <name>filterMatchMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Location of the column filter with respect to header content. Options are 'bottom'(default) and 'top'.]]>
            </description>
            <name>filterPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Value of the filter field.]]>
            </description>
            <name>filterValue</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the number of rows the column spans.]]>
            </description>
            <name>rowspan</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the number of columns the column spans.]]>
            </description>
            <name>colspan</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for header facet.]]>
            </description>
            <name>headerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shortcut for footer facet.]]>
            </description>
            <name>footerText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of characters for an input filter.]]>
            </description>
            <name>filterMaxLength</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies resizable feature at column level. Datatable's resizableColumns must be enabled to use this option.]]>
            </description>
            <name>resizable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the column should be exported by dataexporter.]]>
            </description>
            <name>exportable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of iterator to refer each row index.]]>
            </description>
            <name>columnIndexVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Width of the column in pixels or percentage.]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if panel is toggleable by columnToggler component. Default value is true and a false value marks the column as static.]]>
            </description>
            <name>toggleable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom implementation to filter a value against a constraint.]]>
            </description>
            <name>filterFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the field to pass lazy load method for filtering and sorting. If not specified, filterBy-sortBy values are used to identify the field name.]]>
            </description>
            <name>field</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Priority of the column defined as an integer, lower values have more priority.]]>
            </description>
            <name>priority</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to mark column as sortable.]]>
            </description>
            <name>sortable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to mark column as filterable.]]>
            </description>
            <name>filterable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Controls the visibilty of the column, default is true.]]>
            </description>
            <name>visible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether clicking the column selects the row when datatable has row selection enabled, default is true.]]>
            </description>
            <name>selectRow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label to read by screen readers, when not specified headerText is used.]]>
            </description>
            <name>ariaHeaderText</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Custom pluggable exportFunction.]]>
            </description>
            <name>exportFunction</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Speficies whether to group rows based on the column data.]]>
            </description>
            <name>groupRow</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the header value of column to be exported.]]>
            </description>
            <name>exportHeaderValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if the footer value of column to be exported.]]>
            </description>
            <name>exportFooterValue</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[ColumnToggler is a helper component for datatable to toggle visibility of columns.]]>
        </description>
        <tag-name>columnToggler</tag-name>
        <component>
            <component-type>org.primefaces.component.ColumnToggler</component-type>
            <renderer-type>org.primefaces.component.ColumnTogglerRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A search expression resolving to a component to get attached to.]]>
            </description>
            <name>trigger</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A search expression resolving to a DataTable component whose columns to be toggled.]]>
            </description>
            <name>datasource</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[CommandButton is an extended version of standard JSF commandButton with ajax and skinning features.]]>
        </description>
        <tag-name>commandButton</tag-name>
        <component>
            <component-type>org.primefaces.component.CommandButton</component-type>
            <renderer-type>org.primefaces.component.CommandButtonRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An actionlistener to process when command is executed.]]>
            </description>
            <name>actionListener</name>
            <required>false</required>
            <type>javax.faces.event.ActionListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression or a string outcome to process when command is executed.]]>
            </description>
            <name>action</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value that determines the phaseId of the action event,
    when true actions are processed at "Apply Request Values", when false at "Invoke Application" phase.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies the submit mode, when set to true (default), submit would be made with Ajax.]]>
            </description>
            <name>ajax</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set to true, ajax requests are not queued.]]>
            </description>
            <name>async</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Component(s) to process partially instead of whole view.]]>
            </description>
            <name>process</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Component(s) to be updated with ajax.]]>
            </description>
            <name>update</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute before ajax request is begins.]]>
            </description>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request is completed.]]>
            </description>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request fails.]]>
            </description>
            <name>onerror</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request succeeds.]]>
            </description>
            <name>onsuccess</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines whether to trigger ajaxStatus or not.]]>
            </description>
            <name>global</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If less than delay milliseconds elapses between calls to request() only the most recent one is sent and all other requests are discarded. The default value of this option is null. If the value of delay is the literal string 'none' without the quotes or the default, no delay is used.]]>
            </description>
            <name>delay</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the timeout for the ajax request.]]>
            </description>
            <name>timeout</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, only values related to partially processed components would be serialized for ajax
                instead of whole form.]]>
            </description>
            <name>partialSubmit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.]]>
            </description>
            <name>resetValues</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, components which autoUpdate="true" will not be updated for this request. If not specified, or the value is false, no such indication is made.]]>
            </description>
            <name>ignoreAutoUpdate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key that when pressed transfers focus to the button.]]>
            </description>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Alternate textual description of the button.]]>
            </description>
            <name>alt</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.]]>
            </description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables the button.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class representing the button icon.]]>
            </description>
            <name>image</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A localized user presentable name.]]>
            </description>
            <name>label</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Code describing the language used in the generated markup.]]>
            </description>
            <name>lang</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the button element in the tabbing order.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Advisory tooltip informaton.]]>
            </description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets the behavior of the button. Default is submit.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the button element.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the button element.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button loses focus.]]>
            </description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button loses focus and its value has been modified since gaining focus.]]>
            </description>
            <name>onchange</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button is clicked.]]>
            </description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button is double clicked.]]>
            </description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when button receives focus.]]>
            </description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed down over button.]]>
            </description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed and released over button.]]>
            </description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is released over button.]]>
            </description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is pressed down over button.]]>
            </description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved within button.]]>
            </description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved away from button.]]>
            </description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved onto button.]]>
            </description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is released over button.]]>
            </description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when text within button is selected by user.]]>
            </description>
            <name>onselect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Icon of the button.]]>
            </description>
            <name>icon</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the icon, default value is left.]]>
            </description>
            <name>iconPos</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Displays button inline instead of fitting the content width, only used by mobile.]]>
            </description>
            <name>inline</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if label of the component is escaped or not.]]>
            </description>
            <name>escape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set to true client side validation is enabled, global setting is required to be enabled as a prerequisite.]]>
            </description>
            <name>validateClient</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Selector to use when partial submit is on, default is ":input" to select all descendant inputs of a partially processed components.]]>
            </description>
            <name>partialSubmitFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Form to serialize for an ajax request. Default is the enclosing form.]]>
            </description>
            <name>form</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, click event can be added to disabled button]]>
            </description>
            <name>renderDisabledClick</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The aria-label attribute is used to define a string that labels the current element for accessibility.]]>
            </description>
            <name>ariaLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[CommandLink extends standard JSF commandLink with Ajax capabilities.]]>
        </description>
        <tag-name>commandLink</tag-name>
        <component>
            <component-type>org.primefaces.component.CommandLink</component-type>
            <renderer-type>org.primefaces.component.CommandLinkRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An actionlistener to process when command is executed.]]>
            </description>
            <name>actionListener</name>
            <required>false</required>
            <type>javax.faces.event.ActionListener</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A method expression or a string outcome to process when command is executed.]]>
            </description>
            <name>action</name>
            <required>false</required>
            <type>javax.el.MethodExpression</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value that determines the phaseId of the action event,
    when true actions are processed at "Apply Request Values", when false at "Invoke Application" phase.]]>
            </description>
            <name>immediate</name>
            <required>false</required>
            <type>boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies the submit mode, when set to true (default), submit would be made with Ajax.]]>
            </description>
            <name>ajax</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set to true, ajax requests are not queued.]]>
            </description>
            <name>async</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Component(s) to process partially instead of whole view.]]>
            </description>
            <name>process</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Component(s) to be updated with ajax.]]>
            </description>
            <name>update</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute before ajax request is begins.]]>
            </description>
            <name>onstart</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request is completed.]]>
            </description>
            <name>oncomplete</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request fails.]]>
            </description>
            <name>onerror</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when ajax request succeeds.]]>
            </description>
            <name>onsuccess</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines whether to trigger ajaxStatus or not.]]>
            </description>
            <name>global</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If less than delay milliseconds elapses between calls to request() only the most recent one is sent and all other requests are discarded. The default value of this option is null. If the value of delay is the literal string 'none' without the quotes or the default, no delay is used.]]>
            </description>
            <name>delay</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the timeout for the ajax request.]]>
            </description>
            <name>timeout</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, only values related to partially processed components would be serialized for ajax
                instead of whole form.]]>
            </description>
            <name>partialSubmit</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, indicate that this particular Ajax transaction is a value reset transaction. This will cause resetValue() to be called on any EditableValueHolder instances encountered as a result of this ajax transaction. If not specified, or the value is false, no such indication is made.]]>
            </description>
            <name>resetValues</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[If true, components which autoUpdate="true" will not be updated for this request. If not specified, or the value is false, no such indication is made.]]>
            </description>
            <name>ignoreAutoUpdate</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Access key that when pressed transfers focus to the link.]]>
            </description>
            <name>accesskey</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Character encoding of the resource designated by this hyperlink.]]>
            </description>
            <name>charset</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position and shape of the hot spot on the screen for client use in image maps.]]>
            </description>
            <name>coords</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Direction indication for text that does not inherit directionality. Valid values are LTR and RTL.]]>
            </description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables the link.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Languae code of the resource designated by the link.]]>
            </description>
            <name>hreflang</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Relationship from the current document to the anchor specified by the link, values are provided by a space-separated list of link types.]]>
            </description>
            <name>rel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[A reverse link from the anchor specified by this link to the current document, values are provided by a space-separated list of link types.]]>
            </description>
            <name>rev</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Shape of hot spot on the screen, valid values are default, rect, circle and poly.]]>
            </description>
            <name>shape</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the button element in the tabbing order.]]>
            </description>
            <name>tabindex</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of a frame where the resource targeted by this link will be displayed.]]>
            </description>
            <name>target</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Advisory tooltip informaton.]]>
            </description>
            <name>title</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of resource referenced by the link.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style to be applied on the anchor element.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[StyleClass to be applied on the anchor element]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when link loses focus.]]>
            </description>
            <name>onblur</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when link is clicked.]]>
            </description>
            <name>onclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when link is double clicked.]]>
            </description>
            <name>ondblclick</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when link receives focus.]]>
            </description>
            <name>onfocus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed down over link.]]>
            </description>
            <name>onkeydown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is pressed and released over link.]]>
            </description>
            <name>onkeypress</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a key is released over link.]]>
            </description>
            <name>onkeyup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is pressed down over link.]]>
            </description>
            <name>onmousedown</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved within link.]]>
            </description>
            <name>onmousemove</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved away from link.]]>
            </description>
            <name>onmouseout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is moved onto link.]]>
            </description>
            <name>onmouseover</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute when a pointer button is released over link.]]>
            </description>
            <name>onmouseup</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When set to true client side validation is enabled, global setting is required to be enabled as a prerequisite.]]>
            </description>
            <name>validateClient</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Selector to use when partial submit is on, default is ":input" to select all descendant inputs of a partially processed components.]]>
            </description>
            <name>partialSubmitFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Form to serialize for an ajax request. Default is the enclosing form.]]>
            </description>
            <name>form</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[The aria-label attribute is used to define a string that labels the current element for accessibility.]]>
            </description>
            <name>ariaLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[ConfirmDialog is a replacement to the legacy javascript confirmation box.
        Skinning, customization and avoiding popup blockers are notabled advantages over classic javascript confirmation.]]>
        </description>
        <tag-name>confirmDialog</tag-name>
        <component>
            <component-type>org.primefaces.component.ConfirmDialog</component-type>
            <renderer-type>org.primefaces.component.ConfirmDialogRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Text to be displayed in body. Required.]]>
            </description>
            <name>message</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Text for the header.]]>
            </description>
            <name>header</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Message severity for the dislayed icon. Default is alert.]]>
            </description>
            <name>severity</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Width of the dialog in pixels. Default is auto.]]>
            </description>
            <name>width</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Height of the dialog.]]>
            </description>
            <name>height</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inner style of the dialog container.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the dialog container.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if close icon should be displayed or not. Default is true.]]>
            </description>
            <name>closable</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Alternative to appendToBody. Appends the dialog to the given search expression.]]>
            </description>
            <name>appendTo</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Sets dialogs visibility. Default is false.]]>
            </description>
            <name>visible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Effect to use when showing the dialog.]]>
            </description>
            <name>showEffect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Effect to use when hiding the dialog.]]>
            </description>
            <name>hideEffect</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if dialog should close when escape key is pressed. Default is false.]]>
            </description>
            <name>closeOnEscape</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines text direction, valid values are "ltr" (default) and "rtl".]]>
            </description>
            <name>dir</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[When enabled, confirmDialog becomes a shared for other components that require confirmation.]]>
            </description>
            <name>global</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[In responsive mode, dialog adjusts itself based on screen width.]]>
            </description>
            <name>responsive</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[ContentFlow is used to display a collection of items.]]>
        </description>
        <tag-name>contentFlow</tag-name>
        <component>
            <component-type>org.primefaces.component.ContentFlow</component-type>
            <renderer-type>org.primefaces.component.ContentFlowRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Collection of items.]]>
            </description>
            <name>value</name>
            <required>true</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the iterator to display an item.]]>
            </description>
            <name>var</name>
            <required>true</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the container element.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the container element.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[ContextMenu provides an overlay menu displayed on mouse right-click event.]]>
        </description>
        <tag-name>contextMenu</tag-name>
        <component>
            <component-type>org.primefaces.component.ContextMenu</component-type>
            <renderer-type>org.primefaces.component.ContextMenuRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Id of the component to attach to.]]>
            </description>
            <name>for</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style of the main container element.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the main container element.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Menu model instance to create menu programmatically.]]>
            </description>
            <name>model</name>
            <required>false</required>
            <type>org.primefaces.model.menu.MenuModel</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of tree nodes to get attached.]]>
            </description>
            <name>nodeType</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Event to bind the contextmenu default is right click.]]>
            </description>
            <name>event</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Client side callback to execute before context menu is shown.]]>
            </description>
            <name>beforeShow</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines the selection behavior. Valid values are "single" and "multiple" (default).]]>
            </description>
            <name>selectionMode</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Selector to filter the elements to attach the menu. Default is null.]]>
            </description>
            <name>targetFilter</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[Dashboard provides a portal like layout with drag-drop based reorder capabilities.]]>
        </description>
        <tag-name>dashboard</tag-name>
        <component>
            <component-type>org.primefaces.component.Dashboard</component-type>
            <renderer-type>org.primefaces.component.DashboardRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Dashboard model instance representing the layout of the UI.]]>
            </description>
            <name>model</name>
            <required>false</required>
            <type>org.primefaces.model.DashboardModel</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Disables reordering.]]>
            </description>
            <name>disabled</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the dashboard container.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the dashboard container.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[DataGrid displays a collection of data in grid layout. Ajax Pagination is a built-in feature and paginator UI is fully customizable via various options like paginatorTemplate, rowPerPageOptions, pageLinks and more.]]>
        </description>
        <tag-name>dataGrid</tag-name>
        <component>
            <component-type>org.primefaces.component.DataGrid</component-type>
            <renderer-type>org.primefaces.component.DataGridRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Datasource of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the iterator variable used to refer each data.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of rows to display per page. Default value is 0 meaning to display all data available.]]>
            </description>
            <name>rows</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Index of the first data to display.]]>
            </description>
            <name>first</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of columns of grid. Default is 3.]]>
            </description>
            <name>columns</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables pagination.]]>
            </description>
            <name>paginator</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the paginator.]]>
            </description>
            <name>paginatorTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the rowsPerPage dropdown.]]>
            </description>
            <name>rowsPerPageTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label for rowsPerPage dropdown.]]>
            </description>
            <name>rowsPerPageLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the currentPageReport UI.]]>
            </description>
            <name>currentPageReportTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of page links to display. Default is 10.]]>
            </description>
            <name>pageLinks</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the paginator. Default is both.]]>
            </description>
            <name>paginatorPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if paginator should be hidden if total data count is less than number of rows per page. Default is true.]]>
            </description>
            <name>paginatorAlwaysVisible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the main container.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the main container.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of iterator to refer each row index.]]>
            </description>
            <name>rowIndexVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Text to display when there is no data to display. Default is "No records found."]]>
            </description>
            <name>emptyMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if lazy loading is enabled for the data component.]]>
            </description>
            <name>lazy</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Layout approach to use, valid values are "tabular" (default) and "grid" for responsive grid.]]>
            </description>
            <name>layout</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Keeps state of its children on a per-row basis. Default is false.]]>
            </description>
            <name>rowStatePreserved</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[DataList presents a collection of data in list layout with several display types.
        Ajax Pagination is a built-in feature and paginator UI is fully customizable via various options like paginatorTemplate, rowsPerPageOptions, pageLinks and more.]]>
        </description>
        <tag-name>dataList</tag-name>
        <component>
            <component-type>org.primefaces.component.DataList</component-type>
            <renderer-type>org.primefaces.component.DataListRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Datasource of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the iterator variable used to refer each data.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of rows to display per page. Default value is 0 meaning to display all data available.]]>
            </description>
            <name>rows</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Index of the first data to display.]]>
            </description>
            <name>first</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the client side widget.]]>
            </description>
            <name>widgetVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Type of the list, valid values are "unordered", "ordered" and "definition". Default is unordered.]]>
            </description>
            <name>type</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Specifies the list item type.]]>
            </description>
            <name>itemType</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Enables pagination. Default is false.]]>
            </description>
            <name>paginator</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the paginator.]]>
            </description>
            <name>paginatorTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the rowsPerPage dropdown.]]>
            </description>
            <name>rowsPerPageTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Label for rowsPerPage dropdown.]]>
            </description>
            <name>rowsPerPageLabel</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Template of the currentPageReport UI.]]>
            </description>
            <name>currentPageReportTemplate</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Maximum number of page links to display. Default is 10.]]>
            </description>
            <name>pageLinks</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Position of the paginator. Default is both.]]>
            </description>
            <name>paginatorPosition</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if paginator should be hidden if total data count is less than number of rows per page.]]>
            </description>
            <name>paginatorAlwaysVisible</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Inline style of the main container.]]>
            </description>
            <name>style</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of the main container.]]>
            </description>
            <name>styleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of iterator to refer each row index.]]>
            </description>
            <name>rowIndexVar</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the exported request scoped variable for the status of the iteration.]]>
            </description>
            <name>varStatus</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Defines if lazy loading is enabled for the data component.]]>
            </description>
            <name>lazy</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Text to display when there is no data to display. Default is "No records found."]]>
            </description>
            <name>emptyMessage</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Style class of an item in list. This option is useful to assign specific styles to certain items using an EL expression.]]>
            </description>
            <name>itemStyleClass</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Keeps state of its children on a per-row basis. Default is false.]]>
            </description>
            <name>rowStatePreserved</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Whether to keep list state across views, defaults to false.]]>
            </description>
            <name>multiViewState</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
    </tag>
    <tag>
        <description>
            <![CDATA[DataScroller displays a collection of data featuring on demand loading using scroll.]]>
        </description>
        <tag-name>dataScroller</tag-name>
        <component>
            <component-type>org.primefaces.component.DataScroller</component-type>
            <renderer-type>org.primefaces.component.DataScrollerRenderer</renderer-type>
        </component>
        <attribute>
            <description>
                <![CDATA[Unique identifier of the component in a namingContainer.]]>
            </description>
            <name>id</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Boolean value to specify the rendering of the component, when set to false component will not be rendered.]]>
            </description>
            <name>rendered</name>
            <required>false</required>
            <type>java.lang.Boolean</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[An el expression referring to a server side UIComponent instance in a backing bean.]]>
            </description>
            <name>binding</name>
            <required>false</required>
            <type>javax.faces.component.UIComponent</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Datasource of the component.]]>
            </description>
            <name>value</name>
            <required>false</required>
            <type>java.lang.Object</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Name of the iterator variable used to refer each data.]]>
            </description>
            <name>var</name>
            <required>false</required>
            <type>java.lang.String</type>
        </attribute>
        <attribute>
            <description>
                <![CDATA[Number of rows to display per page. Default value is 0 meaning to display all data available.]]>
            </description>
            <name>rows</name>
            <required>false</required>
            <type>java.lang.Integer</type>
        </attribute>
        <attribute>
            <descriptio display: none;
  }
  .badge {
    border: 1px solid #000;
  }
  .table {
    border-collapse: collapse !important;
  }
  .table td,
  .table th {
    background-color: #fff !important;
  }
  .table-bordered th,
  .table-bordered td {
    border: 1px solid #dee2e6 !important;
  }
  .table-dark {
    color: inherit;
  }
  .table-dark th,
  .table-dark td,
  .table-dark thead th,
  .table-dark tbody + tbody {
    border-color: #dee2e6;
  }
  .table .thead-dark th {
    color: inherit;
    border-color: #dee2e6;
  }
}
/*# sourceMappingURL=bootstrap.css.map */